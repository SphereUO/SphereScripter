const vscode = require("vscode");

class SCPFormatter {
  provideDocumentFormattingEdits(document, options, token) {
    const textEdits = [];

    for (let i = 0; i < document.lineCount; i++) {
      const line = document.lineAt(i);
      const trimmedLine = line.text.trimRight();
      const formattedKeywordsLine = this.formatKeywords(trimmedLine);
      const formattedLine = this.formatTriggers(formattedKeywordsLine);
      const startPos = new vscode.Position(i, 0);
      const endPos = new vscode.Position(i, line.text.length);
      const range = new vscode.Range(startPos, endPos);
      const textEdit = new vscode.TextEdit(range, formattedLine);

      textEdits.push(textEdit);
    }

    return textEdits;
  }

  // format triggers (ON=) to uppercase
  formatTriggers(text) {
    var pattern = /(\bon=@\w+\b[^\s/]*)(?!\S)/gi;

    function transformacion(match) {
      return match.toUpperCase();
    }

    return text.replace(pattern, transformacion);
  }

  //format keywords to uppercase
  formatKeywords(line) {
    const keywordsToFormat = [
      // Palabras clave para formatear en mayÃºsculas
      "DB",
      "FILE",
      "sex",
      "AddTriggerGroup",
      "isevent",
      "allskills",
      "attack",
      "bounce",
      "CanSeeLos",
      "charExists",
      "croppedtext",
      "dcroppedtext",
      "checkBox",
      "CheckSuccess",
      "classmessage",
      "consume",
      "create",
      "damage",
      "DelaySkillStroke",
      "findId",
      "dialog",
      "dismount",
      "distanceFrom",
      "dupe",
      "emote",
      "unequip",
      "equip",
      "drop",
      "eval",
      "events",
      "findres",
      "finduid",
      "fix",
      "font",
      "gm",
      "go",
      "invul",
      "isChar",
      "isChardef",
      "isDead",
      "isGM",
      "isItem",
      "isItemdef",
      "itemExists",
      "makeitem",
      "message",
      "mount",
      "newequip",
      "newequipsafe",
      "log",
      "map",
      "newdupe",
      "newitem",
      "newitemsafe",
      "newnpc",
      "NEWSUMMON",
      "npcExists",
      "nuke",
      "playerExists",
      "profession",
      "rand",
      "redmessage",
      "reduceResist",
      "resurrect",
      "return",
      "remove",
      "RemoveTriggerGroup",
      "rescount",
      "restest",
      "safe",
      "FLEE",
      "say",
      "sayU",
      "sayUA",
      "settext",
      "skill",
      "speak",
      "speakU",
      "skillCheck",
      "spellEffect",
      "srcCanSeeLOS",
      "stopMagery",
      "strcmpi",
      "suicide",
      "sysMessage",
      "target",
      "Trigger_Fail",
      "Trigger_Start",
      "Trigger_Success",
      "update",
      "use",
      "GUMPS",
      "button",
      "buttontileart",
      "TILEPIC",
      "checkertrans",
      "lastTextLine",
      "dialogclose",
      "dialog_buttonpos",
      "dialog_buttonpos_near",
      "dialog_forcePage",
      "dialog_linkButton",
      "dialog_newPage",
      "dialog_page",
      "dialog_textpos",
      "gumppic",
      "htmlgump",
      "newHTMLGump",
      "lastTextLine",
      "newTextLine",
      "noclose",
      "nomove",
      "questDialog_addResponse",
      "questDialog_baseButt",
      "questDialog_create",
      "questDialog_HTMLGUMP",
      "page",
      "resizepic",
      "setLocation",
      "text",
      "texta",
      "textentry",
      "newTextEntry",
      "FINDLAYER",
      "FINDCONT",
      "FINDID",
      "FINDTYPE",
      "EXPLODE",
      "STRARG",
      "STREAT",
      "STRCMP",
      "STRCMPI",
      "STRLEN",
      "STRPOS",
      "STRREVERSE",
      "STRSUB",
      "STRTOLOWER",
      "STRTOUPPER",
      "STRTRIM",
      "STRMATCH",
      "STRREGEX",
      "RADIO",
      "sector",
      "action",
      "AddTimer",
      "advrate",
      "amount",
      "anim",
      "armor",
      "attr",
      "aversions",
      "baseid",
      "bloodcolor",
      "body",
      "can",
      "can_pile",
      "char",
      "color",
      "CREATE",
      "SELL",
      "BUY",
      "cont",
      "dam",
      "def",
      "defname",
      "CALCMEMBERINDEX",
      "desires",
      "dex",
      "dispid",
      "fame",
      "findlayer",
      "findMemory",
      "findType",
      "flags",
      "flip",
      "DUPELIST",
      "DUPEITEM",
      "food",
      "foodtype",
      "HasTimer",
      "hits",
      "hitpoints",
      "icon",
      "id",
      "int",
      "intelligence",
      "item",
      "itemNewbie",
      "karma",
      "key",
      "layer",
      "maxFood",
      "obody",
      "oskin",
      "mana",
      "maxhits",
      "maxmana",
      "maxstam",
      "memoryfindtype",
      "more",
      "more1",
      "more2",
      "morep",
      "morex",
      "morey",
      "morez",
      "MOREM",
      "MORE1L",
      "MORE1H",
      "MORE2L",
      "MORE2H",
      "moverate",
      "RESLEVEL",
      "RESDISPDNID",
      "RESDISPDNHUE",
      "name",
      "npc",
      "p",
      "RainChance",
      "RECT",
      "RemoveTimer",
      "resources",
      "resources2",
      "resmake",
      "serial",
      "shelter",
      "skillmake",
      "skillsum",
      "stam",
      "stamina",
      "statsum",
      "str",
      "strength",
      "strlen",
      "strmatch",
      "tdata1",
      "tdata2",
      "tdata3",
      "tdata4",
      "tevents",
      "timer",
      "timerd",
      "title",
      "tspeech",
      "type",
      "uid",
      "value",
      "weight",
      "SPEED",
      "REPAIR",
      "TWOHANDS",
      "component",
      "category",
      "subsection",
      "description",
      "multiregion",
      "ALCHEMY",
      "ANATOMY",
      "ANIMALLORE",
      "ITEMID",
      "ARMSLORE",
      "BOWCRAFT",
      "PEACEMAKING",
      "CAMPING",
      "Carpentry",
      "Cartography",
      "Cooking",
      "DetectingHidden",
      "Enticement",
      "EvaluatingIntel",
      "Healing",
      "Fishing",
      "Forensics",
      "Herding",
      "Hiding",
      "Provocation",
      "Inscription",
      "LockPicking",
      "Magery",
      "Tactics",
      "Snooping",
      "Musicianship",
      "Poisoning",
      "Archery",
      "SpiritSpeak",
      "Stealing",
      "Tailoring",
      "Taming",
      "TasteID",
      "Tinkering",
      "Tracking",
      "Veterinary",
      "Swordsmanship",
      "Macefighting",
      "Fencing",
      "Wrestling",
      "Lumberjacking",
      "Mining",
      "Meditation",
      "Stealth",
      "RemoveTrap",
      "Necromancy",
      "MAGICRESISTANCE",
      "PARRYING",
      "CAST_TIME",
      "DURATION",
      "EFFECT",
      "EFFECT_ID",
      "GROUP",
      "INTERRUPT",
      "MANAUSE",
      "PROMPT_MSG",
      "RUNE_ITEM",
      "RUNES",
      "SCROLL_ITEM",
      "SKILLREQ",
      "SOUND",
      "function",
      "chardef",
      "itemdef",
      "multidef",
      "events",
      "DEFNAME",
      "DEFMESSAGE",
      "defnames",
      "dialog",
      "typedef",
      "speech",
      "template",
      "menu",
      "eof",
      "RESOURCES",
      "OBSCENE",
      "NOTOTITLES",
      "PLEVEL",
      "AREADEF",
      "SCROLL",
      "TIP",
      "BOOK",
      "NEWBIE",
      "SPAWN",
      "SPELL",
      "act",
      "arg",
      "argChk",
      "argn",
      "args",
      "argo",
      "argv",
      "argvcount",
      "argtxt",
      "lastnew",
      "lastnewchar",
      "link",
      "qtag",
      "serv",
      "new",
      "src",
      "tag",
      "targ",
      "this",
      "topobj",
      "REGION",
      "ACCOUNT",
      "Trigger",
      "var",
      "var0",
      "tag0",
      "CONT",
      "DORAND",
      "DOSWITCH",
      "ELSE",
      "ELSIF",
      "ELSEIF",
      "ENDIF",
      "ENDDO",
      "ENDWHILE",
      "IF",
      "WHILE",
      "RETURN",
      "BEGIN",
      "END",
      "FOR",
      "ENDFOR",
      "FORCHARLAYER",
      "FORCHARMEMORYTYPE",
      "FORCHARS",
      "FORCLIENTS",
      "FORPLAYERS",
      "FORCONT",
      "FORCONTID",
      "FORCONTTYPE",
      "FORISTANCES",
      "FORITEMS",
      "FOROBJS",
      "TRY",
      "TRYP",
      "TRYSRC",
      "TRYSRV",
      "GO",
      "BRAIN_NONE",
      "BRAIN_ANIMAL",
      "BRAIN_HUMAN",
      "BRAIN_HEALER",
      "BRAIN_GUARD",
      "BRAIN_BANKER",
      "BRAIN_VENDOR",
      "BRAIN_ANIMAL_TRAINER",
      "BRAIN_MONSTER",
      "BRAIN_BERSERK",
      "BRAIN_DRAGON",
      "MT_MALE",
      "MT_GHOST",
      "MT_SWIM",
      "MT_WALK",
      "MT_PASSWALLS",
      "MT_FLY",
      "MT_FIRE_IMMUNE",
      "MT_NOINDOORS",
      "MT_HOVER",
      "MT_EQUIP",
      "MT_USEHANDS",
      "MT_MOUNT",
      "MT_FEMALE",
      "MT_NONHUM",
      "MT_RUN",
      "mt_nodclicklos",
      "MT_NODCLICKDIST",
      "mt_nonmover",
      "attr_identified",
      "attr_newbie",
      "attr_move_always",
      "attr_move_never",
      "attr_magic",
      "attr_owned",
      "attr_invis",
      "attr_cursed",
      "attr_blessed",
      "attr_static",
      "attr_exceptional",
      "attr_enchanted",
      "attr_imbued",
      "attr_questitem",
      "attr_insured",
      "attr_nodroptrade",
      "attr_norepair",
      "attr_lockeddown",
      "attr_secure",
      "attr_reforged",
      "attr_opened",
      "dam_god",
      "dam_physical",
      "dam_magic",
      "dam_poison",
      "dam_fire",
      "dam_energy",
      "dam_general",
      "dam_acidic",
      "dam_cold",
      "dam_slash",
      "dam_pierce",
      "dam_nodisturb",
      "dam_noreveal",
      "dam_nounparalyze",
      "dam_fixed",
      "dorigin",
      "dhtmlgump",
      "dtext",
      "dtextentry",
      "dtextentrylimited",
      "gumppictiled",
      "nodispose",
      "tilepichue",
      "tooltip",
      "xmfhtmlgump",
      "xmfhtmlgumpcolor",
      "xmfhtmltok",
    ];

    for (const keyword of keywordsToFormat) {
      const pattern = new RegExp(`(?<!//.*)\\b${keyword}\\b`, "gi");
      if (!line.trim().startsWith("//")) {
        line = line.replace(pattern, keyword.toUpperCase());
      }
    }

    return line;
  }
}

module.exports = SCPFormatter;
